$date
	Wed Mar 22 17:22:52 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module sfifo_rw_tst $end
$var integer 32 ! i [31:0] $end
$upscope $end
$scope module sfifo_sim $end
$var event 1 " wr_event $end
$var event 1 # setup_event $end
$var event 1 $ rd_event $end
$var event 1 % error_event $end
$var wire 1 & udfl $end
$var wire 1 ' ovfl $end
$var wire 1 ( full $end
$var wire 1 ) empty $end
$var wire 16 * dout [15:0] $end
$var reg 1 + checker_was_enabled $end
$var reg 1 , chk_en $end
$var reg 1 - chk_en_d $end
$var reg 1 . chk_en_d2 $end
$var reg 1 / clk $end
$var reg 16 0 din [15:0] $end
$var reg 1 1 empty_d $end
$var reg 1 2 ok_to_read $end
$var reg 1 3 r_en $end
$var reg 1 4 rd_en_d $end
$var reg 1 5 rd_vld $end
$var reg 1 6 rst $end
$var reg 7 7 scf_rptr [6:0] $end
$var reg 8 8 scf_wcnt [7:0] $end
$var reg 7 9 scf_wptr [6:0] $end
$var reg 1 : w_en $end
$var integer 32 ; rd_count [31:0] $end
$var integer 32 < wr_count [31:0] $end
$scope module u1_sfifo $end
$var wire 1 / clk $end
$var wire 16 = din_in [15:0] $end
$var wire 1 3 rd_in $end
$var wire 1 6 rst $end
$var wire 1 : wr_in $end
$var reg 16 > din [15:0] $end
$var reg 16 ? dout [15:0] $end
$var reg 1 ) empty $end
$var reg 1 ( full $end
$var reg 1 ' ovfl $end
$var reg 1 @ rd $end
$var reg 1 A rd_cycle $end
$var reg 6 B rd_ptr [5:0] $end
$var reg 1 & udfl $end
$var reg 1 C wr $end
$var reg 1 D wr_cycle $end
$var reg 6 E wr_ptr [5:0] $end
$upscope $end
$scope task delay $end
$var reg 32 F clks [31:0] $end
$upscope $end
$scope task endsim $end
$upscope $end
$scope task fifo_chk_en $end
$var reg 1 G en $end
$upscope $end
$scope task init $end
$upscope $end
$scope task wrfifo $end
$var reg 8 H wrdata [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx H
xG
bx F
bx E
xD
xC
bx B
xA
x@
bx ?
bx >
bx =
b0 <
b0 ;
0:
b0 9
b0 8
bx 7
x6
x5
x4
03
x2
x1
bx 0
0/
x.
x-
x,
0+
bx *
x)
x(
x'
x&
1%
1$
1#
1"
bx !
$end
#5
0&
0'
0@
0C
04
02
1/
#10
0/
#13
1)
0(
b0 7
11
0.
0-
05
0D
0A
b0 E
b0 B
06
1#
#15
1/
#20
0/
#23
1#
#25
1/
#30
0/
#33
1#
#35
1/
#40
0/
#43
1#
#45
1/
#46
16
#50
0/
#53
1#
#55
1-
b100100 H
b0 !
1+
1,
1G
1/
#60
0/
#63
b100100 0
b100100 =
1:
1#
#65
b1 8
1.
b100100 >
1C
b1 <
1"
b1 9
1/
#66
b10000001 H
b1 !
b0xxxxxxxx 0
b0xxxxxxxx =
0:
#70
0/
#73
b10000001 0
b10000001 =
1:
1#
#75
0)
b10000001 >
b1 E
b10 8
b10 <
1"
b10 9
1/
#76
b1001 H
b10 !
b0xxxxxxxx 0
b0xxxxxxxx =
0:
#80
0/
#83
b1001 0
b1001 =
1:
1#
#85
b11 8
01
b10 E
b1001 >
12
b11 <
1"
b11 9
1/
#86
b1100011 H
b11 !
b0xxxxxxxx 0
b0xxxxxxxx =
0:
#90
0/
#93
b1100011 0
b1100011 =
1:
13
1#
#95
1@
b1100011 >
b11 E
14
b100 <
1"
b100 9
1/
#96
03
b1101 H
b100 !
b0xxxxxxxx 0
b0xxxxxxxx =
0:
#100
0/
#103
b1101 0
b1101 =
1:
13
1#
#105
15
b100100 *
b100100 ?
b100 E
b1 B
b1101 >
b101 <
1"
b101 9
1/
#106
03
b101 F
0,
0G
b101 !
b0xxxxxxxx 0
b0xxxxxxxx =
0:
#110
0/
#113
1#
#115
0@
b0xxxxxxxx >
0C
b10 B
b101 E
b10000001 *
b10000001 ?
0-
04
b1 7
b1 ;
1$
1/
#120
0/
#123
1#
#125
0.
05
b10 7
b10 ;
1$
1/
#130
0/
#133
1#
#135
1/
#140
0/
#143
1#
#145
1/
#150
0/
#153
1#
#155
1-
b10001101 H
1,
1G
1/
#160
0/
#163
b10001101 0
b10001101 =
1:
13
1#
#165
1.
14
1@
b10001101 >
1C
b110 <
1"
b110 9
1/
#166
03
b10100 F
b0xxxxxxxx 0
b0xxxxxxxx =
0:
#170
0/
#173
13
1#
#175
b0xxxxxxxx >
0C
b11 B
b110 E
b1001 *
b1001 ?
15
b10 8
1/
#176
03
#180
0/
#183
13
1#
#185
b1 8
b1100011 *
b1100011 ?
b100 B
b11 7
b11 ;
1$
1/
#186
03
#190
0/
#193
13
1#
#195
b101 B
b1101 *
b1101 ?
b0 8
b100 7
b100 ;
1$
1/
#196
03
#200
0/
#203
13
1#
#205
1&
1)
b11111111 8
b10001101 *
b10001101 ?
b110 B
b101 7
b101 ;
1$
1/
#206
03
#210
0/
#213
13
1#
#215
11
b11111110 8
b110 7
b110 ;
1$
02
1/
#216
03
#220
0/
#223
1#
#225
0&
04
0@
1/
#230
0/
#233
1#
#235
05
1/
#240
0/
#243
1#
#245
1/
#250
0/
#253
1#
#255
1/
#260
0/
#263
1#
#265
1/
#270
0/
#273
1#
#275
1/
#280
0/
#283
1#
#285
1/
#290
0/
#293
1#
#295
1/
#300
0/
#303
1#
#305
1/
#310
0/
#313
1#
#315
1/
#320
0/
#323
1#
#325
1/
#330
0/
#333
1#
#335
1/
#340
0/
#343
1#
#345
1/
#350
0/
#353
1#
#355
1/
#360
0/
#363
1#
#365
1/
